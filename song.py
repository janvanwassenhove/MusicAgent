'''
This file contains the Song class that represents a song and handles the creation of the song file.
'''
import os
from songCreationData import SongCreationData
class Song:
    def __init__(self, name, logger):
        self.name = name
        self.song_dir = ""
        self.logger = logger

    def get_song_dir(self):
        return self.song_dir

    def create_song_file(self, song_creation_data):
        # Create the songs directory if it doesn't exist
        if not os.path.exists('songs'):
            os.makedirs('songs')
        # Create the subdirectory for the song
        song_directory = os.path.join('songs', self.name)
        if not os.path.exists(song_directory):
           os.makedirs(song_directory)

        song_creation_data.sonicpi_code = "# --" + self.name.upper() +"-- \n# Generated by mITy.John music's agency. \n\n" + song_creation_data.sonicpi_code

        self.song_dir = song_directory
        self.logger.info("Writing song to directory: " + self.song_dir)
        # self.logger.info("sonic pi code " + song_creation_data.sonicpi_code)

        # Create the song file
        song_file = os.path.join(self.song_dir, self.name + '.rb')
        with open(song_file, 'w') as f:
            f.write(song_creation_data.sonicpi_code)

    def create_readme_file(self, song_creation_data):
        readme_file = os.path.join(self.song_dir, 'README.md')

        readme_content = (
            f"# --- {self.name} ---"
            f"\n Generated by mITy.John music's agency. \n\n"
            f"![Album Cover]({self.name}.png)\n"
            f"\n\nLyrics: \n{song_creation_data.lyrics}\n\n"
            f"---\n\n"
            f"## Song Parameters\n"
            f"Song Prompt: {song_creation_data.song_description}\n\n"
            f"Theme: {song_creation_data.theme}\n\n"
            f"Melody: {song_creation_data.melody}\n\n"
            f"Rhythm: {song_creation_data.rhythm}\n\n"
            f"Structure: {song_creation_data.structure}\n\n"
            f"Segments: {song_creation_data.segments}\n\n"
            f"Total Duration: {song_creation_data.total_duration} seconds\n\n\n"
            f"Arrangements: {song_creation_data.arrangements}\n\n\n"
        )

        # Write the content to README.md
        with open(readme_file, 'w') as file:
            file.write(readme_content)


